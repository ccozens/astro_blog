---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  // generate flat array of all tags
  const uniqueTags = [...new Set (allPosts.map((post) => post.data.tags).flat())]
  // filter uniqueTags and return obj with tag as params and filteredPosts as props
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts }
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

// need to revisit these
type postType = {
  url: string;
  frontmatter: any;
};
interface Frontmatter extends postType {
  title: string;
}

---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul class="blogPostList">
    {posts.map((post: postType) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
</BaseLayout>